<%= javascript_include_tag '/xlsx.full.min.js' %>
<%= javascript_include_tag '/FileSaver.min.js' %>
<style type="text/css">

.chart {
  display: block;
  margin: auto;
  margin-top: 60px;
  font-size: 11px;
}

text {
  pointer-events: none;
}

</style>
<!-- Content Header (Page header) -->
<section class="content-header">
  <h1>Evaluation <%= @evaluation.profiles.map(&:name).join(', ') %></h1>
  <ol class="breadcrumb" data-turbolinks="false">
    <li><%= link_to ('<i class="fa fa-dashboard"> </i>Dashboard').html_safe, root_path %></li>
    <li><%= link_to 'Evaluations', evaluations_path %></li>
    <li class="active">Evaluation</li>
  </ol>
</section>
<script>
var evaluation_id = '<%= @evaluation.id %>';
</script>
<!-- Main content -->
<section class="content container-fluid">
  <div class="row">
    <div class="col-md-3">
      <div class="box box-primary">
       <div class="box-header">
          <h3 class="box-title">Evaluation Information</h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
          <div id="show_info" style="display:block;">
             <p>
              <strong>InSpec Version:</strong>
              <%= @evaluation.version %>
            </p>

            <p>
              <strong>Other Checks:</strong>
              <%= @evaluation.other_checks %>
            </p>

            <% @evaluation.tags.each do |tag| %>
              <p>
                <strong><%= tag.name.capitalize %>:</strong>
                <%= tag.value %>
              </p>
            <% end %>
            <% if can? :edit, @evaluation %>
              <p>
                <button type="button" id="edit_btn" class="btn btn-primary margin-right"><i class="fa fa-edit"></i> Add/Edit Tags</button>
              </p>
            <% end %>
          </div>
          <% if can? :edit, @evaluation %>
            <div id="edit_info" style="display:none;">
              <%= form_for @evaluation.tags.new, as: :tag, url: evaluation_tag_path(@evaluation) do |f| %>
                <div class="form-group">
                  <%= f.label :name %>
                  <%= f.select :name, Tag.options_for_select, { :prompt => 'Select Tag' }, class: "form-control" %>
                </div>
                <div class="form-group">
                  <%= f.label :value %>
                  <%= f.text_field :value, id: :tag_value, class: "form-control" %>
                </div>
                <div class="form-group">
                  <button type="button" id="cancel_btn" class="btn btn-primary pull-right">Cancel</button>
                  <%= button_tag(type: "submit", class: "btn btn-primary margin-right") do %>
                    <i class="fa fa-edit"></i> Submit
                  <% end %>
                </div>
              <% end %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
    <div class="col-md-3">
      <div class="box box-primary">
        <div class="box-header">
          <h3 class="box-title">Profiles</h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
          <p>
            <strong>Base Profile:</strong>
            <%= link_to @evaluation.base_profile&.name, profile_path(@evaluation.base_profile) %></li>
          </p>
          <% prof_list = @evaluation.included_profiles %>
          <% unless prof_list.empty? %>
            <p>
              <strong>Included Profiles:</strong>
              <ul class="horizontal-list">
              <% prof_list.each do |prof| %>
                <li>
                  <%= check_box_tag(prof.id, prof.id, true, :onclick=>"exclude_profile('#{prof.id}');")%>
                  <%= link_to prof.name, profile_path(prof) %>
                </li>
              <% end %>
              </ul>
            </p>
          <% end %>
        </div>
      </div>
    </div>
    <div class="col-md-3">
      <div class="box box-primary">
        <div class="box-header">
          <h3 class="box-title">Platform</h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
          <p>
            <strong>Name:</strong>
            <%= @evaluation.platform_name %>
          </p>

          <p>
            <strong>Release:</strong>
            <%= @evaluation.platform_release %>
          </p>
        </div>
      </div>
      <div class="box box-primary">
        <div class="box-header">
          <h3 class="box-title">Statistics</h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
          <p>
            <strong>Start Time:</strong>
            <%= @evaluation.start_time %>
          </p>
          <p>
            <strong>Duration:</strong>
            <%= @evaluation.statistics_duration %>
          </p>
        </div>
      </div>
    </div>
    <div class="col-md-3">
      <div class="box box-primary">
        <div class="box-header">
          <h3 class="box-title">Formats</h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
          <p>
            <strong>View SSP:</strong>
            <%= link_to 'SSP', ssp_evaluation_path(@evaluation) %>
          </p>
          <p>
            <strong>Export CKL:</strong>
            <%= link_to 'CKL', evaluation_path(@evaluation, format: :ckl), :target => "_blank" %>
          </p>
          <p>
            <strong>Export XCCDF:</strong>
            <%= link_to 'XCCDF', evaluation_xccdf_path(@evaluation) %>
          </p>
          <p>
            <strong>Export CSV:</strong>
            <%= link_to 'CSV', evaluation_path(@evaluation, format: :csv), :target => "_blank" %>
          </p>
          <p>
            <strong>Export CAAT:</strong>
            <%= link_to 'CAAT', '#', :id => "export-caat" %>
          </p>
        </div>
      </div>
    </div>
  </div>

  <!-- Small boxes (Stat box) -->
  <div class="row">
    <div class="col-lg-3">
      <div class="box box-primary">
        <div class="box-header with-border">
          <h3 class="box-title">Compliance Level</h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
          <div id="profile_gauge"></div>
        </div>
      </div>
    </div>

    <div class="col-xs-9">
      <div class="box box-primary">
        <div class="box-header">
          <h3 class="box-title">Findings</h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
          <div class="col-lg-2 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-green">
              <div class="inner">
                <ul class="horizontal-list">
                  <li><h3 id="not_a_finding_count"></h3></li>
                  <li><h4>Not a Finding</h4></li>
                </ul>
                <p class="small-font">&nbsp;</p>
              </div>
            </div>
          </div>
          <!-- ./col -->
          <div class="col-lg-2 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-red">
              <div class="inner">
                <ul class="horizontal-list">
                  <li><h3 id="open_count"></h3></li>
                  <li><h4>Open&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h4></li>
                </ul>
                <p class="small-font">&nbsp;</p>
              </div>
            </div>
          </div>
          <!-- ./col -->
          <div class="col-lg-2 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-med-grey">
              <div class="inner">
                <ul class="horizontal-list">
                  <li><h3 id="not_reviewed_count"></h3></li>
                  <li><h4>Not Reviewed&nbsp;&nbsp;&nbsp;</h4></li>
                </ul>
                <p class="small-font">(can only be tested manually or disabled test)</p>
              </div>
            </div>
          </div>
          <!-- ./col -->
          <div class="col-lg-2 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-aqua">
              <div class="inner">
                <ul class="horizontal-list">
                  <li><h3 id="not_applicable_count"></h3></li>
                  <li><h4>Not Applicable&nbsp;&nbsp;</h4></li>
                </ul>
                <p class="small-font">(zero impact: exception for this system and/or absent component)</p>
              </div>
            </div>
          </div>
          <!-- ./col -->
          <div class="col-lg-2 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-med-grey">
              <div class="inner">
                <ul class="horizontal-list">
                  <li><h3 id="not_tested_count"></h3></li>
                  <li><h4>Not Tested&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h4></li>
                </ul>
                <p class="small-font">(profile error)</p>
              </div>
            </div>
          </div>
          <!-- ./col -->
        </div>
        <!-- /.row -->
      </div>
    </div>
  </div>
  <div class="row" id="all_controls_row">
    <div class="col-lg-4">
      <div class="box box-primary">
        <div class="box-header with-border">
          <h3 class="box-title">Control Status</h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
          <div id="status_pie"></div>
        </div>
      </div>
    </div>
    <div class="col-lg-4">
      <div class="box box-primary">
        <div class="box-header with-border">
          <h3 class="box-title">Control Impact</h3>
        </div>
        <button id="clear_filters_button" type="button" class="btn btn-primary floating">Clear Filters</button>
        <!-- /.box-header -->
        <div class="box-body">
          <div id="severity_pie"></div>
        </div>
      </div>
    </div>
    <div class="col-lg-4">
      <div class="box box-primary">
        <div class="box-header with-border">
          <h3 class="box-title">Control Filter</h3>
          <% if @filter_label %>
              <span class="span-title">Active Filter:</span></br>
              <h4><%= @filter_label %></h4>
              <br>
              <%= link_to "Clear Filter", clear_filter_evaluation_path(@evaluation), class: "btn btn-primary" %>
          <% end %>
        </div>
        <div class="box-body no-top-padding">
          <div class="col-md-4">
            <%= form_for :filter, url: filter_evaluation_path(@evaluation), remote: true do |form| %>
              <div class="row">
                <div class="box-body">
                  <div class="col-md-2 padded-right">
                    <% @nist_hash["children"].first((@nist_hash["children"].size/2).to_i).each do |family| %>
                      <div class="checkbox">
                        <label>
                          <%= form.check_box 'family', {:id=> "fam_cb_#{family['name']}", :checked=>false, :multiple => true}, family['name'], nil %>
                          <%= family['name'] %>
                        </label>
                      </div>
                    <% end %>
                  </div>
                  <div class="col-md-2 padded-right">
                    <% @nist_hash["children"].last((@nist_hash["children"].size/2).to_i).each do |family| %>
                      <div class="checkbox">
                        <label>
                          <%= form.check_box 'family', {:id=> "fam_cb_#{family['name']}", :checked=>false, :multiple => true}, family['name'], nil %>
                          <%= family['name'] %>
                        </label>
                      </div>
                    <% end %>
                  </div>
                </div>
              </div>
              <div class="row">
                <div class="col-md-4">
                  <%= button_tag(type: "submit", class: "btn btn-primary") do %>
                    <i class="fa fa-edit"></i> Filter by Family
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>
          <div class="col-md-6">
            <%= form_for :filter_group, url: filter_select_evaluation_path(@evaluation), remote: true do |form| %>
              <div class="box-body">
                <p>
                  <h4>Select Filter Group</h4>
                  <%= form.select :id, FilterGroup.all.collect {|u| [u.name, u.id]}, { :prompt => 'Select' } %>
                  <h4>Or</h4>
                  <h4>Select Filter</h4>
                  <%= form.select :filter_ids, Filter.all.collect {|u| [u.to_s, u.id]}, { :prompt => 'Select' } %>
                  <br>
                </p>
                <%= button_tag(type: "submit", class: "btn btn-primary") do %>
                  <i class="fa fa-edit"></i> Filter by Selected
                <% end %>
                <h4>Or</h4>
                <button type="button" id="build_btn" class="btn btn-block btn-info">Build Filter</button>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="row", style="display:none;" id="filter_row">
    <div class="col-md-12">
      <div class="box box-primary">
        <div class="box-header with-border">
          <h3 class="box-title">Control Filters</h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
          <%= form_for :filter, url: filter_evaluation_path(@evaluation), remote: true do |form| %>
            <div class="row">
              <div class="col-sm-1">
                <div class="box-header">
                  <h3 class="box-title">Families</h3>
                </div>
                <div class="form-group">
                  <div class="col-md-2 padded-right">
                    <% @nist_hash["children"].first((@nist_hash["children"].size/2).to_i).each do |family| %>
                      <div class="checkbox">
                        <label>
                          <%= form.check_box 'family', {:id=> "fam_cb_#{family['name']}", :checked=>false, :multiple => true, :onclick=>'filterNumbers()'}, family['name'], nil %>
                          <%= family['name'] %>
                        </label>
                      </div>
                    <% end %>
                  </div>
                  <div class="col-md-2 padded-right">
                    <% @nist_hash["children"].last((@nist_hash["children"].size/2).to_i).each do |family| %>
                      <div class="checkbox">
                        <label>
                          <%= form.check_box 'family', {:id=> "fam_cb_#{family['name']}", :checked=>false, :multiple => true, :onclick=>'filterNumbers()'}, family['name'], nil %>
                          <%= family['name'] %>
                        </label>
                      </div>
                    <% end %>
                  </div>
                </div>
              </div>
              <div class="col-sm-2">
                <div class="box-header">
                  <h3 class="box-title">Numbers</h3>
                </div>
                <div class="form-group">
                  <div class="col-md-2 padded-right">
                    <% (1..11).each do |num| %>
                      <div class="checkbox">
                        <label>
                          <%= form.check_box("number", {:id=> "num_cb_#{num}", :checked=>false, :multiple => true}, num, nil) %>
                          <%= num %>
                        </label>
                      </div>
                    <% end %>
                  </div>
                  <div class="col-md-2 padded-right">
                    <% (12..22).each do |num| %>
                      <div class="checkbox">
                        <label>
                          <%= form.check_box("number", {:id=> "num_cb_#{num}", :checked=>false, :multiple => true}, num, nil) %>
                          <%= num %>
                        </label>
                      </div>
                    <% end %>
                  </div>
                  <div class="col-md-2 padded-right">
                    <% (23..33).each do |num| %>
                      <div class="checkbox">
                        <label>
                          <%= form.check_box("number", {:id=> "num_cb_#{num}", :checked=>false, :multiple => true}, num, nil) %>
                          <%= num %>
                        </label>
                      </div>
                    <% end %>
                  </div>
                  <div class="col-md-2 padded-right">
                    <% (34..44).each do |num| %>
                      <div class="checkbox">
                        <label>
                          <%= form.check_box("number", {:id=> "num_cb_#{num}", :checked=>false, :multiple => true}, num, nil) %>
                          <%= num %>
                        </label>
                      </div>
                    <% end %>
                  </div>
                </div>
              </div>
              <div class="col-sm-1">
                <div class="box-header">
                  <h3 class="box-title">Part</h3>
                </div>
                <div class="form-group">
                  <div class="col-md-2">
                    <% ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k'].each do |fam| %>
                      <div class="checkbox">
                        <label>
                          <%= form.check_box("sub_fam", {:id=> "sub_fam_cb_#{fam}", :checked=>false, :multiple => true}, fam, nil) %>
                          <%= fam %>
                        </label>
                      </div>
                    <% end %>
                  </div>
                </div>
              </div>
              <div class="col-sm-1">
                <div class="box-header">
                  <h3 class="box-title">Sub-Part</h3>
                </div>
                <div class="form-group">
                  <div class="col-md-2">
                    <% (1..10).each do |num| %>
                      <div class="checkbox">
                        <label>
                          <%= form.check_box("sub_num", {:id=> "sub_num_cb_#{num}", :checked=>false, :multiple => true}, num, nil) %>
                          <%= num %>
                        </label>
                      </div>
                    <% end %>
                  </div>
                </div>
              </div>
              <div class="col-sm-1">
                <div class="box-header">
                  <h3 class="box-title">Enhancement</h3>
                </div>
                <div class="form-group">
                  <div class="col-md-2 padded-right">
                    <% (1..12).each do |enhancement| %>
                      <div class="checkbox">
                        <label>
                          <%= form.check_box("enhancement", {:id=> "enhancement_cb_#{enhancement}", :checked=>false, :multiple => true, :onclick=>'yesEnhancements()'}, enhancement, nil) %>
                          <%= "(#{enhancement})" %>
                        </label>
                      </div>
                    <% end %>
                  </div>
                  <div class="col-md-2 padded-right">
                    <% (13..24).each do |enhancement| %>
                      <div class="checkbox">
                        <label>
                          <%= form.check_box("enhancement", {:id=> "enhancement_cb_#{enhancement}", :checked=>false, :multiple => true, :onclick=>'yesEnhancements()'}, enhancement, nil) %>
                          <%= "(#{enhancement})" %>
                        </label>
                      </div>
                    <% end %>
                    <div class="checkbox">
                      <label>
                        <%= form.check_box("enhancement", {:id=> "none_enhance_cb", :checked=>false, :multiple => true, :onclick=>'noEnhancements()'}, "none", nil) %>
                        None
                      </label>
                    </div>
                  </div>
                </div>
              </div>
              <div class="col-sm-1">
                <div class="box-header">
                  <h3 class="box-title">Part</h3>
                </div>
                <div class="form-group">
                  <div class="col-md-2">
                    <% ['a', 'b', 'c', 'd', 'e', 'f'].each do |fam| %>
                      <div class="checkbox">
                        <label>
                          <%= form.check_box("enh_sub_fam", {:id=> "enh_sub_fam_cb_#{fam}", :checked=>false, :multiple => true, :disabled=>true}, fam, nil) %>
                          <%= fam %>
                        </label>
                      </div>
                    <% end %>
                  </div>
                </div>
              </div>
              <div class="col-sm-1">
                <div class="box-header">
                  <h3 class="box-title">Sub-Part</h3>
                </div>
                <div class="form-group">
                  <div class="col-md-2">
                    <% (1..5).each do |num| %>
                      <div class="checkbox">
                        <label>
                          <%= form.check_box("enh_sub_num", {:id=> "enh_sub_num_cb_#{num}", :checked=>false, :multiple => true, :disabled=>true}, num, nil) %>
                          <%= num %>
                        </label>
                      </div>
                    <% end %>
                  </div>
                </div>
              </div>
            </div>
            <div class="row">
              <div class="col-sm-1">
                <div class="checkbox">
                  <label>
                    <%= form.check_box("save_filter", {:id=> "save_filter_cb", :checked=>false}, "save", nil) %>
                    Save Filter
                  </label>
                </div>
              </div>
              <div class="col-sm-1">
                <%= button_tag(type: "submit", class: "btn btn-primary pull-right margin-right") do %>
                  <i class="fa fa-edit"></i> Filter by Selected
                <% end %>
              </div>
              <div class="col-sm-1">
                <button type="button" id="close_build_btn" class="btn btn-block btn-info">Close</button>
              </div>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-md-12">
      <div class="box box-primary">
        <div class="box-header with-border">
          <h3 class="box-title">Controls</h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
          <ul class="nav nav-tabs tabs-bordered">
            <li class="nav-item" id="treemap_nav_item">
              <%= link_to "Treemap Chart", evaluation_path(@evaluation), class: "nav-link", id: 'treemap' %>
              <!--a href="<%= evaluation_path(@evaluation) %>" id='treemap' data-toggle="tab" aria-expanded="false" class="nav-link">
                TreeMap Chart
              </a-->
            </li>
            <li class="nav-item" id="partition_nav_item">
              <%= link_to "Partition Chart", evaluation_path(@evaluation), class: "nav-link", id: 'partition' %>
              <!--a href="<%= evaluation_path(@evaluation) %>" id='partition' data-toggle="tab" aria-expanded="false" class="nav-link">
                Partition Chart
              </a-->
            </li>
          </ul>
          <div class="tab-content" style="display:none;">
            <div class="tab-pane" id="treemap">
            </div>
            <div class="tab-pane" id="partition">
            </div>
          </div>
          <div id="chart"></div>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-xs-12">
      <div class="box box-primary">
        <div class="box-header">
          <h3 class="box-title">Profile Controls</h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body" id="controls_table" data-turbolinks="false">
        </div>
      </div>
    </div>
  </div>
</section>
<!-- /.content -->
<script>

var cats = {"High": true, "Medium": true, "Low": true};
var stats = {"Not A Finding": true, "Not Applicable": true, "Open": true, "Not Reviewed": true, "Not Tested": true};
var shown_id = null;
var loaded = null;
var compliance_count = 0.0;
var total_count = 0;
var currentDepth = 0;
var status_data = {};
var nist_counts = {"AC": 25, "AU": 16, "AT": 5, "CM": 11, "CP": 13, "IA": 11, "IR": 10, "MA": 6, "MP": 8,
  "PS": 8, "PE": 20, "PL": 9, "PM": 16, "RA": 6, "CA": 9, "SC": 44, "SI": 17, "SA": 22};
<% if @filter_label %>
  var filter_label = '<%= @filter_label %>';
<% else %>
  var filter_label;
<% end %>
var chart_data = null;
var chartname_id = 'chart_name:' + evaluation_id;
var chart_name = localStorage.getItem(chartname_id);
var excluded_profiles = [];

console.log("chart_name1: " + chart_name);
if (!chart_name) {
  chart_name = 'treemap';
  console.log("chart_name2: " + chart_name);
}
if (chart_name == 'partition') {
  $('#partition_nav_item').addClass('active');
} else {
  $('#treemap_nav_item').addClass('active');
}

function load_chart(chart_type) {
  d3.select("#chart_js").empty();
  url = "<%= root_path %>" + "evaluations/" + evaluation_id + "/chart.js";
  if (chart_type) {
    url += "?chart_type=" + chart_type;
  }
  $.ajax(url, {
    async: false,
    dataType: "script",
    success: function(data) {
      console.log("Loaded chart " + chart_name);
      if (chart_name == "treemap") {
        drawTreemap(null);
      } else {
        drawPartition(null);
      }
    },
    error: function() {
      console.log("Error occured");
    }
  });
}

function get_chart_data(category, status) {
  chart_id = 'chart_data:' + evaluation_id;
  url = "<%= root_path %>" + "evaluations/" + evaluation_id + "/nist";
  //url = "<%= root_path %>" + "evaluations/" + evaluation_id + "/nist.json";
  if (category) {
    url += "/category/" + encodeURIComponent(category);
    chart_id += 'category:' + category;
  }
  if (status) {
    url += "/status/" + encodeURIComponent(status);
    chart_id += 'status:' + status;
  }
  url += ".json";
  for(var i=0, len=excluded_profiles.length; i < len; i++) {
    if (i == 0) {
      url += '?'
      chart_id += 'ex_ids:' + excluded_profiles[i];
    }
    else {
      url += '&'
      chart_id += ':' + excluded_profiles[i];
    }
    url += "ex_ids=" + excluded_profiles[i];
  }

  if (filter_label) {
    chart_id += 'filter:' + filter_label;
  }

  //localStorage.clear();
  chart_data_str = localStorage.getItem(chart_id);
  if (chart_data_str) {
    chart_data = JSON.parse(chart_data_str);
    console.log("Loaded data for " + chart_id);
  } else {
   $.ajax(url, {
      async: false,
      success: function(data) {
        console.log("ajax data: " + data.controls.length);
        chart_data = data;
        console.log("Ajaxed data for " + chart_id);
        localStorage.setItem(chart_id, JSON.stringify(data));
      },
      error: function() {
        console.log("Error occured");
      }
    });
  }
}

function filterNumbers() {
  count = 0;
  checked = null;
  $('input:checkbox[id^="fam_cb_"]:checked').each(function(){
    count += 1;
    checked = $(this).val();
  });
  if(count == 1) {
    $('input:checkbox[id^="num_cb_"]').each(function(){
      if($(this).val() <= nist_counts[checked]) {
        $(this).prop("disabled", false);
      } else {
        $(this).prop('checked', false);
        $(this).prop("disabled", true);
      }
      $('input:checkbox[id^="sub_fam_cb_"]').each(function(){
        $(this).prop("disabled", false);
      });
      $('input:checkbox[id^="sub_num_cb_"]').each(function(){
        $(this).prop("disabled", false);
      });
    });
  } else if (count > 1) {
    $('input:checkbox[id^="num_cb_"]').each(function(){
      $(this).prop('checked', false);
      $(this).prop("disabled", true);
    });
    $('input:checkbox[id^="sub_fam_cb_"]').each(function(){
      $(this).prop('checked', false);
      $(this).prop("disabled", true);
    });
    $('input:checkbox[id^="sub_num_cb_"]').each(function(){
      $(this).prop('checked', false);
      $(this).prop("disabled", true);
    });
  } else {
    $('input:checkbox[id^="num_cb_"]').each(function(){
      $(this).prop("disabled", false);
    });
  }
}

function noEnhancements() {
  $('input:checkbox[id^="enhancement_cb_"]').each(function(){
    $(this).prop('checked', false);
  });
  $('input:checkbox[id^="enh_sub_fam_cb_"]').each(function(){
    $(this).prop('checked', false);
    $(this).prop("disabled", true);
  });
  $('input:checkbox[id^="enh_sub_num_cb_"]').each(function(){
    $(this).prop('checked', false);
    $(this).prop("disabled", true);
  });
}

function yesEnhancements() {
  count = 0;
  $('input:checkbox[id^="enhancement_cb_"]:checked').each(function(){
    count += 1;
  });
  $('input:checkbox[id^="none_enhance_cb"]').each(function(){
    $(this).prop('checked', false);
  });
  if(count > 1){
    $('input:checkbox[id^="enh_sub_fam_cb_"]').each(function(){
      $(this).prop('checked', false);
      $(this).prop("disabled", true);
    });
    $('input:checkbox[id^="enh_sub_num_cb_"]').each(function(){
      $(this).prop('checked', false);
      $(this).prop("disabled", true);
    });
  } else {
    $('input:checkbox[id^="enh_sub_fam_cb_"]').each(function(){
      $(this).prop("disabled", false);
    });
    $('input:checkbox[id^="enh_sub_num_cb_"]').each(function(){
      $(this).prop("disabled", false);
    });
  }
}

function status_btn(symbol) {
  if (symbol == "Not Applicable")
    return 'btn btn-info'
  else if (symbol == 'Open')
    return 'btn btn-danger'
  else if (symbol == 'Not A Finding')
    return 'btn btn-success'
  else if (symbol == 'Not Reviewed')
    return 'btn btn-neutral'
  else
    return 'btn btn-neutral'
}

function add_control_table(d) {
  $('#controls_table').empty();
  console.log("empty table");
  header = '<table id="controls" class="table table-bordered table-striped"><thead>';
  footer = '</tfoot></table>';
  tr_str = '<tr><th>Status</th><th>Title</th><th>Control ID</th><th>Impact</th><th>Run Time</th><th>NIST Refs</th><th class="hidden">Details</th></tr>';
  rows = '';
  root_path = '<%= root_path %>';
  if (d.controls) {
    console.log("Add " + d.controls.length + " rows to table");
    for(var i=0, len=d.controls.length; i < len; i++) {
      ctl = d.controls[i];
      ctl_id = ctl.id["$oid"];
      profile_id = ctl.profile_id["$oid"];
      rows += '<tr class="' + ctl.severity_cap + ' ' + ctl.status_symbol_title + '" id="' + ctl_id + '">';
      rows += '<td><button class="' + status_btn(ctl.status_symbol_title) + '" style="width:120px" onclick="show_details(\'' + profile_id + '\', \'' + ctl_id + '\');">' + ctl.status_symbol_title + '</button></td>';
      rows += '<td>' + ctl.title + '</td>';
      rows += '<td><a href="' + root_path + 'profiles/' + profile_id + '/controls/' + ctl_id + '">' + ctl.name + '</a></td>';
      rows += '<td>' + ctl.impact + '</td>';
      rows += '<td>' + ctl.run_time + '</td>';
      rows += '<td>' + ctl.nist + '</td>';
      rows += '<td class="hidden">' + ctl.code + '</td></tr>';
    }
  }
  table_str = header + tr_str + '<tbody>' + rows + '</tbody>' + tr_str + footer;
  $('#controls_table').html(table_str);
}

function show_details(profile_id, control_id) {
  hsh = "#" + control_id;
  url = '<%= root_path %>' + 'profiles/' + profile_id + '/controls/' + control_id + '/details/evaluation/' + evaluation_id;
  var tr = $(hsh);
  if ($('#details_row').length) {
    $('#details_row').remove();
  }
  if (control_id != shown_id) {
    shown_id = control_id;
    $.ajax(url, {
        success: function(data) {
          tr.after('<tr id="details_row" role="row"><td colspan="5" id="control_details">' + detailsData + '</td></tr>');
          Prism.highlightAll();
        },
        error: function() {
          console.log("Error occured");
        }
     });
   } else {
     shown_id = null;
   }
}

function clear_cat_filter(bool) {
  cats = {"High": bool, "Medium": bool, "Low" : bool};
}

function clear_stat_filter(bool) {
  stats = {"Not A Finding": bool, "Not Applicable": bool, "Open": bool, "Not Reviewed": bool, "Not Tested": bool};
}

function exclude_profile(profile_id) {
  p_index = excluded_profiles.indexOf(profile_id);
  if (p_index > -1) {
    excluded_profiles.splice(p_index, 1);
    localStorage.setItem("excluded_profiles", excluded_profiles);
  } else {
    excluded_profiles.push(profile_id);
    localStorage.setItem("excluded_profiles", excluded_profiles);
  }
  reload_views();
}

function set_counts(d) {
  not_app = 0;
  not_rev = 0;
  not_find = 0;
  not_test = 0;
  open = 0;
  if (d.controls) {
    for(var i=0, len=d.controls.length; i < len; i++) {
      symbol = d.controls[i].status_symbol;
      if (symbol == 'not_tested') {
        not_test += 1;
      } else if (symbol == 'not_applicable') {
        not_app += 1;
      } else if (symbol == 'not_reviewed') {
        not_rev += 1;
      } else if (symbol == 'not_a_finding') {
        not_find += 1;
      } else if (symbol == 'open') {
        open += 1;
      }
    }
  }
  total_count = not_find + not_rev + open + not_test;
  compliance_count = (not_find / total_count) * 100;
  $('#not_a_finding_count').html(not_find);
  $('#open_count').html(open);
  $('#not_reviewed_count').html(not_rev);
  $('#not_applicable_count').html(not_app);
  $('#not_tested_count').html(not_test);
  console.log("not_find: " + not_find + ", open: " + open + ", not_rev: " + not_rev + ", not_test: " + not_test + ", total: " + total_count);
  console.log("compliance_count = " + not_find + " / " + total_count + " = " + compliance_count);
  status_data = [
                ['Not A Finding',  not_find],
                ['Open',           open],
                ['Not Reviewed',   not_rev],
                ['Not Applicable', not_app],
                ['Not Tested',     not_test],
                ];
  console.log("status_data = " + status_data);
}

function draw_status_pie_chart(d) {
  c3.generate(
  {
    bindto: '#status_pie',
    data: {
        columns: status_data,
        type : 'donut',
        onclick: function (d) {
          if (currentDepth == 0) {
            document.getElementById("clear_filters_button").style.visibility = "visible";
            reload_views(null, d.id);
          }
        },
    },
    oninit: function () {
      this.meetsArcLabelThreshold = function (value) { return value > 0; };
    },
    color:
    {
      pattern: ['rgb(137, 204, 81)', 'rgb(255, 0, 41)', 'rgb(140, 140, 140)', 'rgb(153, 204, 255)', 'rgb(145, 145, 145)']
    },
    size:
    {
      height: 280
    },
    donut: {
      title: 'Status',
      label: {
        format: function (value) { return value; }
      }
    }
  });
}

function draw_severity_pie_chart(d) {
  critical = 0;
  high = 0;
  medium = 0;
  low = 0;
  ary = [];
  if (d.controls) {
    for(var i=0, len=d.controls.length; i < len; i++) {
      impact = d.controls[i].impact_string;
      if (impact == 'low') {
        low += 1;
      } else if (impact == 'medium') {
        medium += 1;
      } else if (impact == 'high') {
        high += 1;
      } else if (impact == 'critical') {
        critical += 1;
      }
    }
  }
  severity_data = [
                  ['Critical', critical],
                  ['High', high],
                  ['Medium', medium],
                  ['Low', low],
              ];

  c3.generate(
  {
    bindto: '#severity_pie',

    data:
    {
      columns: severity_data,
      type : 'donut',
      onclick: function (d)
      {
        if (currentDepth == 0) {
          document.getElementById("clear_filters_button").style.visibility = "visible";
          reload_views(d.id, null);
        }
      },
    },
    color:
    {
        pattern: ['#FF0029', '#003366', '#0080FF', '#99CCFF']
    },
    size:
    {
      height: 280
    },
    donut:
    {
      title: "Impact",
      label:
      {
        format: function (value, ratio, id)
        {
          return d3.format()(value);
        }
      }
    }
  });
}

function draw_compliance_pie_chart() {
  compliance_data = [
                ['Compliance', compliance_count]
                ];
  c3.generate({
    bindto: '#profile_gauge',

    data:
    {
      columns: compliance_data,
      type: 'gauge',
    },

    color:
    {
        pattern: ['#FF0000', '#F97600', '#F6C600', '#60B044'], // the three color levels for the percentage values.
        threshold: {
            values: [30, 40, 70, 100]
        }
    },
    size:
    {
        height: 193
    }
  });
}

$("#export-caat").click(function(event) {
  event.preventDefault();

  //dataSet = filterDataset();
  //controls = getAllNistControls(dataSet);
  controls = chart_data.controls

  var caat = [['Control Number','Finding Title','Date Identified','Finding ID','Information System or Program Name','Repeat Findings','Repeat Finding Weakness ID','Finding Description','Weakness Description','Control Weakness Type','Source','Assessment/Audit Company','Test Method','Test Objective','Test Result Description','Test Result','Recommended Corrective Action(s)','Effect on Business','Likelihood','Impact']];
  vulnList = [];

  for(var i=0, len=controls.length; i < len; i++) {
    control = controls[i];
    field = [];

    if (control.impact_string != 'none' && !vulnList.includes(control.name)) {
      vulnList.push(control.name)
      field.push(control.family);              // Control Number
      field.push(br2nl(control.title));        // Finding Title
      field.push(convertDate(new Date(control.start_time),'/')); // Date Identified
      field.push('');                          // Finding ID
      field.push('');                          // Information System or Program Name
      field.push('');                          // Repeat Findings
      field.push('');                          // Repeat Finding CFACTS Weakness ID
      field.push(br2nl(control.title));        // Finding Description
      field.push(br2nl(control.description));  // Weakness Description
      field.push('Security');                  // Control Weakness Type
      field.push('Self-Assessment ');          // Source
      field.push('InSpec');                    // Assessment/Audit Company
      field.push('Test');                      // Test Method
      field.push(br2nl(control.check)) ;       // Test Objective
      field.push(br2nl(control.result_message)); // Test Result Description
      result = control.status_symbol == "not_a_finding" ? 'Satisfied' : 'Other Than Satisfied';
      field.push(result);                      // Test Result
      field.push(br2nl(control.fix));          // Recommended Corrective Action(s)
      field.push('');                          // Effect on Business
      field.push('');                          // Likelihood
      field.push(control.impact_string)        // Impact
      caat.push(field);
    }
  }

  function convertDate(inputFormat,delimiter) {
    function pad(s) { return (s < 10) ? '0' + s : s; }
    var d = new Date(inputFormat);
    return [pad(d.getMonth()+1), pad(d.getDate()), d.getFullYear()].join(delimiter);
  }

  function br2nl(str) {
    if (str == null)
      return 'Not Available';
    return str.replace(/<br ?\/?>/g, "\r\n").substring(0,32767);
  }

  var wb = XLSX.utils.book_new();

  wb.Props = {
            Title: "Compliance Assessment/Audit Tracking (CAAT) Spreadsheet",
            Subject: "Assessment Data",
            Author: "Heimdall",
            CreatedDate: new Date()
  };

  wb.SheetNames.push("Assessment Data");

  var ws = XLSX.utils.aoa_to_sheet(caat);
  wb.Sheets["Assessment Data"] = ws;

  var wbout = XLSX.write(wb, {bookType:'xlsx',  type: 'binary'});

  function s2ab(s) {
            var buf = new ArrayBuffer(s.length); //convert s to arrayBuffer
            var view = new Uint8Array(buf);  //create uint8array as viewer
            for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF; //convert to octet
            return buf;
  }

  saveAs(new Blob([s2ab(wbout)],{type:"application/octet-stream"}), 'CAAT-'+ convertDate(new Date(),'-')+ '.xlsx');
});


function reload_views(category, status) {
  get_chart_data(category, status)
  set_counts(chart_data);
  load_chart(chart_name);
  draw_status_pie_chart(chart_data);
  draw_severity_pie_chart(chart_data);
  draw_compliance_pie_chart();
  add_control_table(chart_data);
  $('#controls').DataTable().draw();
  var datatable = $('#controls').dataTable().api();
  datatable.draw();
}

document.addEventListener("turbolinks:load", function() {
  if (loaded) {
    return;
  } else {
    loaded = true;
  }

  get_chart_data();
  set_counts(chart_data);
  load_chart(chart_name);
  draw_status_pie_chart(chart_data);
  draw_severity_pie_chart(chart_data);
  draw_compliance_pie_chart();
  add_control_table(chart_data);


  if($('[id^=controls_wrapper]').length == 0) {
    $('#controls').DataTable({
      'paging'      : true,
      'lengthChange': false,
      'searching'   : true,
      'ordering'    : true,
      'info'        : true,
      'autoWidth'   : false
    });
  }

  $("#treemap").click(function(event){
    chartname_id = 'chart_name:' + evaluation_id;
    localStorage.setItem(chartname_id, 'treemap');
  });
  $("#partition").click(function(event){
    console.log("clicked partition");
    chartname_id = 'chart_name:' + evaluation_id;
    localStorage.setItem(chartname_id, 'partition');
  });

  $("#edit_btn").click(function(){
    toggleSections("edit_info", "show_info");
  });
  $("#cancel_btn").click(function(){
    toggleSections("show_info", "edit_info");
  });

  $("#build_btn").click(function(){
    console.log("show builder");
    document.getElementById("filter_row").style.display = 'block';
  });

  $("#close_build_btn").click(function(){
    console.log("Close builder");
    document.getElementById("filter_row").style.display = 'none';
  });

  $("#clear_filters_button").click(function() {
    if (currentDepth == 0) {
      document.getElementById("clear_filters_button").style.visibility = "hidden";
      clear_cat_filter(true);
      clear_stat_filter(true);
      reload_views(null);
    } else {
      alert("You must be at the top level of the chart to clear the filters");
    }
  });

  String.prototype.capitalize = function() {
      return this.charAt(0).toUpperCase() + this.slice(1);
  }

  String.prototype.titleize = function() {
      var string_array = this.split('_');
      string_array = string_array.map(function(str) {
         return str.capitalize();
      });

      return string_array.join(' ');
  }
});

</script>
<script id="chart_js"></script>
